@model Universidad.Models.Subject
@inject DataContext context


@{
    ViewData["Title"] = "Edit";
}

@section Css {
    <link rel="stylesheet" href="~/css/toast.css" />
}


<h4 class="text-center text-muted">Editar Materia</h4>
<hr />
<div class="row justify-content-center">
    <div class="col-md-4 cuadro">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group d-flex">
                <label asp-for="Start_time" class="control-label"></label>/
                <label asp-for="End_time" class="control-label"></label>

            </div>
            <div class="form-group d-flex justify-content-around">
                <input type="time" asp-for="Start_time" class="form-control" />&nbsp;
                <span asp-validation-for="Start_time" class="text-danger"></span>

                <input Type="time" asp-for="End_time" class="form-control" />
                <span asp-validation-for="End_time" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Max_flake" class="control-label"></label>
                <input asp-for="Max_flake" class="form-control" />
                <span asp-validation-for="Max_flake" class="text-danger"></span>
            </div>

            <div class="form-group">
                <select asp-for="Id_teacher" class="form-control">
                    @foreach (var item in context.Teachers)
                    {
                        @:<option @(item.Id_teacher == Model.Id_teacher ? "selected" : "") value="@item.Id_teacher">@(item.Name+' '+item.Last_name)</option>
                    }
                </select>
                <span asp-validation-for="Id_teacher" class="text-danger"></span>
            </div>

            <div class="d-flex justify-content-between">
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
                <div>
                    <a asp-action="Index">Back to List</a>
                </div>
            </div>

        </form>
    </div>
</div>

@*Toast de Respuesta*@
<div role="alert" id="mitoast" aria-live="assertive" aria-atomic="true" class="toast">

    <div class="toast-header bg-danger text-white" id="header_toas">
        <!-- Nombre de la Aplicación -->
        <strong class="mr-auto">Universidad</strong>
        <!-- Tiempo del Evento realizado -->
        <small>Cerrar</small>
        <!-- Botón para Cerrar el Toast -->
        <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Cerrar" onclick="cerrarToast()">
            <span aria-hidden="true">×</span>
        </button>
    </div>
    <div class="toast-body text-center">
        <p> @ViewBag.Error</p>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
    var error = '@ViewBag.Error';

    if (error.length > 0) {
        mostrarToast();
    }
    // Con esta función se muestra el Toast
    function mostrarToast() {
        var toast = document.getElementById("mitoast");
        toast.className = "mostrar";
        setTimeout(function () { toast.className = toast.className.replace("mostrar", ""); }, 5000);
    }

    // Con esta función se cierra el Toast
    function cerrarToast() {
        var toast = document.getElementById("mitoast");
        toast.className = "cerrar";
        toast.className = toast.className.replace("cerrar", "");
    }
    </script>
}
